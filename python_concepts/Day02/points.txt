Tuples
------
Tuples are collection of objects separated by comas

Tuples are immutable lists

Tuples are ordered collections


oops
----
class A:
 
  def __init__(self, name):
     self.__name = name

  def disp(self): 	# getter_method	
     print(self.__name)


object of class A is immutable

objA = A("Kevin")
objA.disp()


----------------------------------------------
  def setter_method(self, nm):
     self.name = nm



Set
---
1. sets are always unique
2. sets are unordered collection
3. sets are not sub scriptable (cannot be indexed)
4. sets are mutable
5. sets are enclosed in {1, 2, 3}


Functions
---------
def fun():
   print("hello world")


Pass by value
Pass by reference

Lambdas
-------
anonymous function with single expression

result_exp = lambda(v1, v2, v3... : expression)


def square(x):
   return(x ** 2)


expression - ()

lst = [1, 2, 3, 4, 5]

list(map(square, lst))


def ever(x):
   if x % 2 == 0:
   	return x 


Scope of a variable
-------------------
1. local
2. global
3. non local


Decorator
---------
will change the way the function executes without modifying the code inside it


















